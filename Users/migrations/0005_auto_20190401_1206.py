# Generated by Django 2.1.3 on 2019-04-01 12:06

from django.db import migrations, models
import django.db.models.deletion
import picklefield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('Users', '0004_auto_20190319_1310'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, help_text='The readable name of this feature', max_length=40, null=True)),
                ('name', models.CharField(help_text='The name as it appears in the dataset', max_length=50)),
                ('column_index', models.IntegerField(help_text='The column index for this feature in the training data (1-indexed)')),
                ('is_target_feature', models.BooleanField(default=False)),
                ('data_type', models.CharField(choices=[('bool', 'Boolean'), ('float64', 'Float'), ('int64', 'Integer')], max_length=10)),
                ('positive_weight', models.NullBooleanField()),
                ('mean', models.FloatField(default=0)),
                ('std_dev', models.FloatField(default=0)),
                ('min_alteration', models.FloatField(default=0, help_text='The minimum achievable alteration for this feature')),
                ('max_alteration', models.FloatField(default=0, help_text='The maximum achievable alteration for this feature')),
                ('message', models.TextField(blank=None, help_text='Why does improving this stat help a team?', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MachineLearningModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_data', models.FileField(upload_to='training_data')),
                ('target_feature_name', models.CharField(help_text='The name of the target feature column as it appears in the training data', max_length=60)),
                ('default', models.BooleanField(default=False, help_text='Is this the default model? (There can only be one)')),
                ('pickled_model', picklefield.fields.PickledObjectField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainedModels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trained_model', picklefield.fields.PickledObjectField(editable=False)),
                ('ml_algorithm', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trained_model', to='Users.MachineLearningModel')),
            ],
        ),
        migrations.RemoveField(
            model_name='programmelookuptable',
            name='lifter',
        ),
        migrations.RemoveField(
            model_name='programmelookuptable',
            name='programme_id',
        ),
        migrations.AlterField(
            model_name='exercise',
            name='name',
            field=models.CharField(max_length=30, unique=True),
        ),
        migrations.DeleteModel(
            name='ProgrammeLookUpTable',
        ),
        migrations.AddField(
            model_name='datafeature',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='Users.MachineLearningModel'),
        ),
        migrations.AlterUniqueTogether(
            name='datafeature',
            unique_together={('model', 'column_index')},
        ),
    ]
